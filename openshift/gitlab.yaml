apiVersion: v1
kind: Template
labels:
  template: gitlab-template
metadata:
  annotations:
    description: Gitlab, you need a Postgresql and a Redis service
    iconClass: icon-tomcat
    tags: gitlab
  name: gitlab
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${GITLAB_SERVICE_NAME}
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      name: ${GITLAB_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
 - apiVersion: v1
   kind: Route
   metadata:
     name: ${GITLAB_SERVICE_NAME}
   spec:
     host: ${GITLAB_EXTERNAL_URL}
     to:
       kind: Service
       name: ${GITLAB_SERVICE_NAME}
     selector:
       name: ${GITLAB_SERVICE_NAME}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${GITLAB_SERVICE_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${GITLAB_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${GITLAB_SERVICE_NAME}
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${GITLAB_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          env:
          - name: REDIS_PASSWORD
            value: ${REDIS_PASSWORD}
          image: gitlab
          imagePullPolicy: IfNotPresent
          name: gitlab
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /data
            name: ${GITLAB_SERVICE_NAME}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: ${GITLAB_SERVICE_NAME}-data
          persistentVolumeClaim:
            claimName: ${GITLAB_SERVICE_NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - gitlab
        from:
          kind: ImageStreamTag
          name: gitlab:latest
          namespace: openshift
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}
parameters:
- description: This service name
  name: GITLAB_SERVICE_NAME
  required: true
  value: gitlab
- description: The external URL for this service
  name: GITLAB_EXTERNAL_URL
  required: true
  value: gitlab
- description: Redis service name
  name: REDIS_SERVICE_NAME
  required: true
  value: redis
- description: Redis Password
  required: true
  name: REDIS_PASSWORD
- description: Postgresql service name
  required: true
  name: POSTGRESQL_SERVICE_NAME
  value: postgresql
- description: Postgresql user name
  required: true
  name: DATABASE_USER
  value: user
- description: Postgresql password
  required: true
  name: DATABASE_PASSWORD
  value: password
- description: Postgresql database nale
  required: true
  name: DATABASE_NAME
  value: gitlabdb
- description: Volume space available for data, e.g. 512Mi, 2Gi
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
